# Generated by Django 3.2.6 on 2025-08-18 14:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetTypes', models.IntegerField(blank=True, choices=[(1, 'مکان'), (2, 'ماشین  آلات'), (3, 'ابزارآلات')], null=True, verbose_name='نوع دارایی')),
                ('assetName', models.CharField(max_length=100, verbose_name='مشخصات')),
                ('assetDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('assetCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد')),
                ('assetAddress', models.CharField(blank=True, max_length=100, null=True, verbose_name='آدرس')),
                ('assetCity', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('assetState', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('assetZipcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد پستی')),
                ('assetCountry', models.CharField(blank=True, max_length=100, null=True, verbose_name='کشور')),
                ('assetAccount', models.CharField(blank=True, max_length=100, null=True, verbose_name='حساب')),
                ('assetChargeDepartment', models.CharField(blank=True, max_length=100, null=True, verbose_name='دپارتمان مسوول')),
                ('assetNotes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('assetBarcode', models.IntegerField(blank=True, null=True, verbose_name='بارکد')),
                ('assetHasPartOf', models.BooleanField(default=False)),
                ('assetAisel', models.IntegerField(blank=True, null=True, verbose_name='راهرو')),
                ('assetRow', models.IntegerField(blank=True, null=True, verbose_name='ردیف')),
                ('assetBin', models.IntegerField(blank=True, null=True, verbose_name='Bin')),
                ('assetManufacture', models.CharField(blank=True, max_length=50, null=True, verbose_name='سازنده')),
                ('assetModel', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('assetSerialNumber', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره سریال')),
                ('assetStatus', models.BooleanField(default=True, verbose_name='وضعیت')),
                ('assetIsStock', models.BooleanField(default=False, verbose_name='انبار')),
                ('assetTavali', models.IntegerField(blank=True, null=True, verbose_name='شماره توالی')),
                ('assetVahed', models.IntegerField(blank=True, null=True, verbose_name='تعداد واحد')),
            ],
            options={
                'db_table': 'assets',
                'ordering': ('assetTavali', 'assetName'),
            },
        ),
        migrations.CreateModel(
            name='Asset2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetTypes', models.IntegerField(blank=True, choices=[(1, 'مکان'), (2, 'ماشین  آلات'), (3, 'ابزارآلات')], null=True, verbose_name='نوع دارایی')),
                ('assetName', models.CharField(max_length=100, verbose_name='مشخصات')),
                ('assetDescription', models.CharField(blank=True, max_length=100, null=True, verbose_name='توضیحات')),
                ('assetCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد')),
                ('assetAddress', models.CharField(blank=True, max_length=100, null=True, verbose_name='آدرس')),
                ('assetCity', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('assetState', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('assetZipcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد پستی')),
                ('assetCountry', models.CharField(blank=True, max_length=100, null=True, verbose_name='کشور')),
                ('assetAccount', models.CharField(blank=True, max_length=100, null=True, verbose_name='حساب')),
                ('assetChargeDepartment', models.CharField(blank=True, max_length=100, null=True, verbose_name='دپارتمان مسوول')),
                ('assetNotes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('assetBarcode', models.IntegerField(blank=True, null=True, verbose_name='بارکد')),
                ('assetHasPartOf', models.BooleanField(default=False)),
                ('assetAisel', models.IntegerField(blank=True, null=True, verbose_name='راهرو')),
                ('assetRow', models.IntegerField(blank=True, null=True, verbose_name='ردیف')),
                ('assetBin', models.IntegerField(blank=True, null=True, verbose_name='Bin')),
                ('assetManufacture', models.CharField(blank=True, max_length=50, null=True, verbose_name='سازنده')),
                ('assetModel', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('assetSerialNumber', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره سریال')),
                ('assetStatus', models.BooleanField(default=True, verbose_name='وضعیت')),
                ('assetIsStock', models.BooleanField(default=False, verbose_name='انبار')),
                ('assetTavali', models.IntegerField(blank=True, null=True, verbose_name='شماره توالی')),
                ('assetVahed', models.IntegerField(blank=True, null=True, verbose_name='تعداد واحد')),
            ],
            options={
                'db_table': 'assets2',
                'ordering': ('assetTavali', 'assetName'),
            },
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('code', models.CharField(max_length=50, verbose_name='کد')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('priority', models.IntegerField(null=True, verbose_name='اولویت')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.assetcategory', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'assetcategory',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='AssetCategory2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('code', models.CharField(max_length=50, verbose_name='کد')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('priority', models.IntegerField(null=True, verbose_name='اولویت')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.assetcategory2', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'assetcategory2',
                'ordering': ('priority',),
            },
        ),
        migrations.CreateModel(
            name='AssetRandemanList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mah', models.IntegerField()),
                ('sal', models.IntegerField()),
            ],
            options={
                'db_table': 'assetrandemanlist',
                'ordering': ('-sal', '-mah'),
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='کد')),
                ('operation_time', models.FloatField(help_text='Time in minutes', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='زمان عملیات')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['reference'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Failure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='کد')),
                ('name', models.CharField(max_length=100, verbose_name='نام')),
                ('is_it_count', models.BooleanField(default=True, verbose_name='فعال در محسابات')),
            ],
            options={
                'db_table': 'failure',
            },
        ),
        migrations.CreateModel(
            name='FinancialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='شرح')),
                ('mablagh_kol_randeman', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='مبلغ کل راندمان')),
                ('tolid_randeman', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='راندمان تولید')),
                ('tolid_randeman_mazrab_3', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='مضرب 3 راندمان')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'financialprofile',
            },
        ),
        migrations.CreateModel(
            name='ManufacturingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('quantity_to_produce', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('done', 'Done'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.billofmaterials')),
            ],
            options={
                'ordering': ['-scheduled_date', 'reference'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField(help_text='Order in which this operation is performed')),
                ('name', models.CharField(help_text='Name of the operation', max_length=200)),
                ('duration', models.FloatField(help_text='Expected duration in hours', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('instructions', models.TextField(blank=True, help_text='Instructions for the operator')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sequence', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pid', models.CharField(blank=True, max_length=20, null=True)),
                ('PNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('CpCode', models.CharField(blank=True, max_length=100, null=True)),
                ('CardNo', models.CharField(blank=True, max_length=100, null=True)),
                ('FName', models.CharField(blank=True, max_length=200, null=True)),
                ('LName', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'Operators',
                'db_table': 'operator',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partName', models.CharField(max_length=100, verbose_name='مشخصات')),
                ('partDescription', models.CharField(max_length=100, verbose_name='توضیحات')),
                ('partCode', models.CharField(max_length=100, verbose_name='کد')),
                ('partMake', models.CharField(blank=True, max_length=100, null=True, verbose_name='ساخته شده توسط')),
                ('partModel', models.CharField(blank=True, max_length=50, null=True, verbose_name='مدل')),
                ('partLastPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='آخرین قیمت')),
                ('partAccount', models.CharField(blank=True, max_length=100, null=True, verbose_name='حساب')),
                ('partChargeDepartment', models.CharField(blank=True, max_length=100, null=True, verbose_name='دپارتمان مسوول')),
                ('partNotes', models.CharField(blank=True, max_length=100, null=True, verbose_name='یادداشت')),
                ('partBarcode', models.IntegerField(blank=True, null=True, verbose_name='بارکد')),
                ('partInventoryCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کد قفسه')),
            ],
            options={
                'db_table': 'parts',
                'ordering': ('partName',),
            },
        ),
        migrations.CreateModel(
            name='PartCsvFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msgFile', models.FileField(max_length=200, upload_to='documents/%Y/%m/%d')),
                ('msgFiledateAdded', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'partcsvfile',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='نام محصول')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد محصول')),
                ('product_type', models.CharField(choices=[('raw', 'Raw Material'), ('finished', 'Finished Good'), ('component', 'Component')], max_length=20, verbose_name='نوع محصول')),
                ('unit_of_measure', models.CharField(choices=[('units', 'Units'), ('kg', 'Kilograms'), ('g', 'Grams'), ('l', 'Liters'), ('ml', 'Milliliters'), ('m', 'Meters'), ('cm', 'Centimeters')], max_length=50, verbose_name='واحد اندازه گیری')),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قیمت تمام شده')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قیمت فروش')),
                ('available_quantity', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='موجودی')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('is_emergency', models.BooleanField(default=False)),
                ('is_tamiri', models.BooleanField(default=False)),
                ('viewed_by', models.TextField(blank=True, default='[]')),
                ('manager_comment', models.TextField(blank=True, default='')),
                ('rejection_reason', models.TextField(blank=True, help_text='دلیل رد درخواست', null=True)),
                ('rejected_at', models.DateTimeField(blank=True, help_text='زمان رد درخواست', null=True)),
                ('status', models.CharField(choices=[('Pending', 'درخواست شده'), ('Approved', 'تایید انبار'), ('Ordered', 'سفارش '), ('Approve2', 'تایید مدیر تولید'), ('Approve3', 'تایید مهندس ارزنده'), ('Purchased', 'خریداری شد'), ('Approve4', 'تایید بازرگانی'), ('GuardApproved', 'ورود ناقص'), ('Completed', 'کامل شده')], default='Pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportName', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام گزارش')),
                ('reportCategory', models.IntegerField(blank=True, choices=[(1, 'دستور کار فعال'), (2, 'دستور کار غیر فعال'), (3, 'کنترل انبار'), (4, 'دارایی'), (5, 'کاربران'), (6, 'اندازه گیری کسب و کار'), (7, 'شخصی سازی شده'), (8, 'پیش بینی'), (9, 'نگهداری زمانبندی شده')], null=True, verbose_name='نوع گزارش')),
                ('reportClassName', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام کلاس')),
                ('reportDetails', models.TextField(blank=True, null=True, verbose_name='شرح')),
                ('reportTemplate', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام قالب')),
                ('reportFav', models.BooleanField(default=True, verbose_name='گزارش مورد علاقه')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reports',
                'ordering': ('reportName',),
            },
        ),
        migrations.CreateModel(
            name='RequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(default=0)),
                ('quantity', models.PositiveIntegerField()),
                ('supplied_quantity', models.PositiveIntegerField(default=0)),
                ('consume_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consume_place', to='mrp.asset2')),
                ('item_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consume_part', to='mrp.part')),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='mrp.purchaserequest')),
            ],
        ),
        migrations.CreateModel(
            name='RFQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='نام شیفت')),
            ],
            options={
                'db_table': 'shift',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('provided_items', models.ManyToManyField(blank=True, help_text='Items that this supplier can provide', related_name='potential_suppliers', to='mrp.RequestItem')),
            ],
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('abbreviation', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='WorkCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='نام')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد')),
                ('capacity_per_hour', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='ظرفیت بر ساعت')),
                ('active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Zayeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('assets', models.ManyToManyField(to='mrp.Asset')),
            ],
            options={
                'db_table': 'zayeat',
            },
        ),
        migrations.CreateModel(
            name='ZayeatVaz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vazn', models.FloatField()),
                ('dayOfIssue', models.DateField()),
                ('makan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zayeat_makan', to='mrp.asset')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.shift')),
                ('zayeat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.zayeat')),
            ],
            options={
                'db_table': 'zayeatvazn',
            },
        ),
        migrations.CreateModel(
            name='WorkOrderTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the template')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bom', models.ForeignKey(help_text='BoM this template is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='work_order_templates', to='mrp.billofmaterials')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.FloatField(help_text='Duration in hours', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('done', 'Done'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturing_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_orders', to='mrp.manufacturingorder')),
                ('operation', models.ForeignKey(blank=True, help_text='Operation from template this work order is based on', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.operation')),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.workcenter')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='TolidRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(choices=[(1, 'رتبه اول'), (2, 'رتبه دوم'), (3, 'رتبه سوم')])),
                ('price_sarshift', models.DecimalField(decimal_places=0, max_digits=10)),
                ('price_personnel', models.DecimalField(decimal_places=0, max_digits=10)),
                ('asset_randeman_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.assetrandemanlist')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.shift')),
            ],
            options={
                'db_table': 'tolidranking',
            },
        ),
        migrations.CreateModel(
            name='TolidPadash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='شرح')),
                ('rank', models.IntegerField(verbose_name='رتبه')),
                ('price_sarshift', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='پاداش سرشیفت')),
                ('price_personnel', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='پاداش پرسنل')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.financialprofile')),
            ],
            options={
                'db_table': 'tolidpadash',
                'ordering': ('rank',),
            },
        ),
        migrations.CreateModel(
            name='SysUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=20)),
                ('token', models.CharField(blank=True, max_length=20, null=True)),
                ('fullName', models.CharField(max_length=50, verbose_name='مشخصات کامل')),
                ('personalCode', models.CharField(max_length=50, verbose_name='کد پرسنلی')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='عنوان')),
                ('email', models.EmailField(blank=True, max_length=70, null=True, unique=True, verbose_name='ایمیل')),
                ('tel1', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن')),
                ('tel2', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن 2')),
                ('addr1', models.CharField(blank=True, max_length=50, null=True, verbose_name='آدرس')),
                ('addr2', models.CharField(blank=True, max_length=50, null=True, verbose_name='آدرس 2')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='شهر')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='استان')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='کشور')),
                ('postalCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='کدپستی')),
                ('hourlyRate', models.FloatField(blank=True, default=0, null=True, verbose_name='نرخ دستمزد ساعتی')),
                ('defaultLoginLocation', models.FloatField(blank=True, choices=[(1, 'داشبورد'), (2, 'درخواستهای انتسابی به من'), (3, 'صندوق ورودی پیامها'), (4, 'درخواست')], null=True, verbose_name='صفحه پیش فرض')),
                ('profileImage', models.ImageField(blank=True, default=None, upload_to='images/')),
                ('userStatus', models.BooleanField(default=True, verbose_name='وضعیت')),
                ('userId', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sysusers',
                'ordering': ['title'],
                'permissions': [('can_view_dashboard', 'can view dashboard'), ('can_admin_purchase', 'can admin create purchase'), ('view_all_request', 'can view  all purchase request'), ('can_confirm_request', 'can confirm request'), ('can_operator_mrp', 'mrp user operator'), ('can_operator_purchase', 'purchase user operator'), ('can_edit_purchase', 'user can edit purchase'), ('can_view_faktors', 'user can view faktors'), ('can_upload_faktors', 'user can upload faktors'), ('can_create_paraf', 'user can craete paraf'), ('can_view_paraf', 'user can view paraf'), ('can_edit_rfq', 'user can edit rfq'), ('can_view_rfq', 'user can view rfq'), ('can_operate_guard', 'user can operate gaurd'), ('can_view_pb', 'user can view planning board')],
            },
        ),
        migrations.CreateModel(
            name='SupplierResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_terms', models.TextField()),
                ('arrival_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='mrp.rfq')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='mrp.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='SpeedFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula', models.CharField(max_length=255)),
                ('machine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrp.asset')),
            ],
            options={
                'db_table': 'speedformula',
            },
        ),
        migrations.AddField(
            model_name='rfq',
            name='issued_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rfquser', to='mrp.sysuser'),
        ),
        migrations.AddField(
            model_name='rfq',
            name='items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rfqitem', to='mrp.requestitem'),
        ),
        migrations.AddField(
            model_name='rfq',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfqsupplier', to='mrp.supplier'),
        ),
        migrations.AddField(
            model_name='requestitem',
            name='supplier_assigned',
            field=models.ForeignKey(blank=True, help_text='Supplier who can provide this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_items', to='mrp.supplier'),
        ),
        migrations.CreateModel(
            name='PurchaseRequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='purchase_requests/files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='mrp.purchaserequest')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseRequestFaktor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='purchase_requests/faktors/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faktors', to='mrp.purchaserequest')),
            ],
        ),
        migrations.AddField(
            model_name='purchaserequest',
            name='rejected_by',
            field=models.ForeignKey(blank=True, help_text='کاربری که درخواست را رد کرده', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_purchase_requests', to='mrp.sysuser'),
        ),
        migrations.AddField(
            model_name='purchaserequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to='mrp.sysuser'),
        ),
        migrations.CreateModel(
            name='PurchaseRejectionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(help_text='وضعیت درخواست قبل از رد', max_length=20)),
                ('new_status', models.CharField(help_text='وضعیت جدید درخواست پس از رد', max_length=20)),
                ('rejection_reason', models.TextField(help_text='دلیل رد درخواست')),
                ('rejected_at', models.DateTimeField(default=django.utils.timezone.now, help_text='زمان رد درخواست')),
                ('purchase_request', models.ForeignKey(help_text='درخواست خرید مرتبط', on_delete=django.db.models.deletion.CASCADE, related_name='rejection_history', to='mrp.purchaserequest')),
                ('rejected_by', models.ForeignKey(blank=True, help_text='کاربری که درخواست را رد کرده', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejection_actions', to='mrp.sysuser')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='mrp.purchaserequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.sysuser')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plogs', to='mrp.purchaserequest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.sysuser')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good_production_rate', models.IntegerField()),
                ('mean_production_rate', models.IntegerField()),
                ('bad_production_rate', models.IntegerField()),
                ('machine_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.asset')),
            ],
            options={
                'db_table': 'productionstandard',
            },
        ),
        migrations.CreateModel(
            name='PartUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartUserPartId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.part', verbose_name='قطعه')),
                ('PartUserUserId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.sysuser', verbose_name='کاربر ')),
            ],
            options={
                'db_table': 'partuser',
            },
        ),
        migrations.CreateModel(
            name='PartFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partFile', models.FileField(max_length=200, upload_to='documents/')),
                ('partFiledateAdded', models.DateTimeField(auto_now_add=True)),
                ('partFilePartId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.part')),
            ],
            options={
                'db_table': 'partfile',
            },
        ),
        migrations.CreateModel(
            name='PartCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('priority', models.IntegerField(null=True, verbose_name='اولویت')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.partcategory', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'partcategory',
            },
        ),
        migrations.AddField(
            model_name='part',
            name='partCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dasdadassa', to='mrp.partcategory', verbose_name='دسته بندی'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_terms', models.TextField()),
                ('arrival_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('items', models.ManyToManyField(related_name='orders', to='mrp.RequestItem')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='mrp.supplier')),
            ],
        ),
        migrations.AddField(
            model_name='operation',
            name='work_center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.workcenter'),
        ),
        migrations.AddField(
            model_name='operation',
            name='work_order_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='mrp.workordertemplate'),
        ),
        migrations.CreateModel(
            name='NezafatRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('price_sarshift', models.DecimalField(decimal_places=0, max_digits=10)),
                ('price_personnel', models.DecimalField(decimal_places=0, max_digits=10)),
                ('asset_randeman_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.assetrandemanlist')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.shift')),
            ],
            options={
                'db_table': 'nezafatranking',
            },
        ),
        migrations.CreateModel(
            name='NezafatPadash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(choices=[(1, 'رتبه اول'), (2, 'رتبه دوم'), (3, 'رتبه سوم')])),
                ('description', models.TextField(verbose_name='َشرح')),
                ('price_sarshift', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='پاداش سرشیفت')),
                ('price_personnel', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='پاداش پرسنل')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.financialprofile')),
            ],
            options={
                'db_table': 'nezafatpadash',
                'ordering': ('rank',),
            },
        ),
        migrations.AddField(
            model_name='manufacturingorder',
            name='product_to_manufacture',
            field=models.ForeignKey(limit_choices_to={'product_type': 'finished'}, on_delete=django.db.models.deletion.CASCADE, to='mrp.product'),
        ),
        migrations.AddField(
            model_name='manufacturingorder',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.sysuser'),
        ),
        migrations.AddField(
            model_name='manufacturingorder',
            name='work_order_template',
            field=models.ForeignKey(blank=True, help_text='Template for generating work orders', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.workordertemplate'),
        ),
        migrations.CreateModel(
            name='MachineCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('description', models.CharField(max_length=50, verbose_name='توضیحات')),
                ('isPartOf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.machinecategory', verbose_name='زیر مجموعه')),
            ],
            options={
                'db_table': 'machinecategory',
            },
        ),
        migrations.CreateModel(
            name='GoodsEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('quantity_received', models.PositiveIntegerField(help_text='تعداد کالای وارد شده در این ورود')),
                ('guard_approved', models.BooleanField(default=False, help_text='تأیید شده توسط نگهبانی')),
                ('guard_comment', models.TextField(blank=True, help_text='توضیحات نگهبان در صورت رد', null=True)),
                ('request_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='mrp.requestitem')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivered_entries', to='mrp.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula', models.CharField(max_length=255)),
                ('machine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrp.asset')),
            ],
            options={
                'db_table': 'formula',
            },
        ),
        migrations.CreateModel(
            name='EntryForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tool', models.IntegerField(blank=True, null=True)),
                ('la', models.IntegerField(blank=True, null=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.color')),
            ],
        ),
        migrations.CreateModel(
            name='DailyProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayOfIssue', models.DateField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('register_user', models.CharField(max_length=100)),
                ('speed', models.FloatField(default=0)),
                ('nomre', models.FloatField()),
                ('counter1', models.CharField(blank=True, max_length=200, null=True)),
                ('counter2', models.CharField(blank=True, max_length=200, null=True)),
                ('vahed', models.FloatField()),
                ('production_value', models.FloatField(blank=True, null=True)),
                ('wastage_value', models.FloatField(blank=True, null=True)),
                ('daf_num', models.FloatField(blank=True, null=True)),
                ('dook_weight', models.FloatField(blank=True, null=True)),
                ('weight1', models.FloatField(blank=True, null=True)),
                ('weight2', models.FloatField(blank=True, null=True)),
                ('weight3', models.FloatField(blank=True, null=True)),
                ('weight4', models.FloatField(blank=True, null=True)),
                ('weight5', models.FloatField(blank=True, null=True)),
                ('net_weight', models.FloatField(blank=True, null=True)),
                ('metrajdaf1', models.FloatField(blank=True, null=True)),
                ('metrajdaf2', models.FloatField(blank=True, null=True)),
                ('metrajdaf3', models.FloatField(blank=True, null=True)),
                ('metrajdaf4', models.FloatField(blank=True, null=True)),
                ('metrajdaf5', models.FloatField(blank=True, null=True)),
                ('metrajdaf6', models.FloatField(blank=True, null=True)),
                ('metrajdaf7', models.FloatField(blank=True, null=True)),
                ('metrajdaf8', models.FloatField(blank=True, null=True)),
                ('makhraj_metraj_daf', models.FloatField(blank=True, null=True)),
                ('operators_data', models.JSONField(blank=True, null=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailyproduction_machine', to='mrp.asset')),
                ('moshakhase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dailyproduction_moshakhase', to='mrp.entryform')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailyproduction_shift', to='mrp.shift')),
            ],
            options={
                'db_table': 'dailyproduction',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='mrp.comment')),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='mrp.purchaserequest')),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to='mrp.sysuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.sysuser')),
            ],
        ),
        migrations.CreateModel(
            name='BOMComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='تعداد')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.billofmaterials')),
                ('product', models.ForeignKey(limit_choices_to={'product_type': 'component'}, on_delete=django.db.models.deletion.CASCADE, to='mrp.product', verbose_name='محصول')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mrp.unitofmeasure', verbose_name='واحد اندازه گیری')),
            ],
            options={
                'ordering': ['product__name'],
            },
        ),
        migrations.AddField(
            model_name='billofmaterials',
            name='components',
            field=models.ManyToManyField(blank=True, null=True, related_name='used_in_boms', through='mrp.BOMComponent', to='mrp.Product'),
        ),
        migrations.AddField(
            model_name='billofmaterials',
            name='product',
            field=models.ForeignKey(limit_choices_to={'product_type': 'finished'}, on_delete=django.db.models.deletion.CASCADE, related_name='boms', to='mrp.product', verbose_name='محصول'),
        ),
        migrations.CreateModel(
            name='AssetRandemanPerMonth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tolid_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('asset_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.assetcategory')),
                ('asset_randeman_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.assetrandemanlist')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.shift')),
            ],
            options={
                'db_table': 'assetrandemanpermonth',
            },
        ),
        migrations.AddField(
            model_name='assetrandemanlist',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.financialprofile', verbose_name='پروفایل مالی'),
        ),
        migrations.CreateModel(
            name='AssetRandemanInit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_count', models.IntegerField(verbose_name='تعداد اپراتور')),
                ('max_randeman', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='حداکثر راندمان')),
                ('randeman_yek_dastgah', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='راندمان کل یک دستگاه')),
                ('randeman_mazrab_3', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='مضرب 3 رانمان')),
                ('mablaghe_kole_randeman', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='مبلغ کل راندمان (واقعی)')),
                ('mablaghe_kole_randeman_round', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='مبلغ کل راندمان (واقعی)')),
                ('randeman_tolid', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='راندمان تولید')),
                ('asset_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.assetcategory', verbose_name='نوع تجهیز')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.financialprofile')),
            ],
            options={
                'db_table': 'assetrandemaninit',
            },
        ),
        migrations.CreateModel(
            name='AssetFailure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.TimeField(verbose_name='مدت توقف')),
                ('dayOfIssue', models.DateField(verbose_name='تاریخ')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('asset_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.asset', verbose_name='نام تجهیز')),
                ('failure_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.failure', verbose_name='علت توقف')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.shift', verbose_name='نام شیفت')),
            ],
            options={
                'ordering': ('shift', 'asset_name', '-duration'),
            },
        ),
        migrations.CreateModel(
            name='AssetDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomre', models.FloatField()),
                ('speed', models.FloatField()),
                ('tab', models.FloatField(default=1)),
                ('asset_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrp.assetcategory2')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_details', to='mrp.entryform')),
            ],
        ),
        migrations.AddField(
            model_name='asset2',
            name='assetCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.assetcategory', verbose_name='دسته بندی'),
        ),
        migrations.AddField(
            model_name='asset2',
            name='assetIsLocatedAt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='mrp.asset2', verbose_name='مکان'),
        ),
        migrations.AddField(
            model_name='asset2',
            name='assetIsPartOf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.asset2', verbose_name='زیر مجموعه'),
        ),
        migrations.AddField(
            model_name='asset2',
            name='assetMachineCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.machinecategory', verbose_name='نوع دستگاه'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assetcategory_main', to='mrp.assetcategory', verbose_name='دسته بندی'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetIsLocatedAt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='mrp.asset', verbose_name='مکان'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetIsPartOf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mrp.asset', verbose_name='زیر مجموعه'),
        ),
        migrations.AddField(
            model_name='asset',
            name='assetMachineCategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrp.machinecategory', verbose_name='نوع دستگاه'),
        ),
        migrations.AddConstraint(
            model_name='workordertemplate',
            constraint=models.UniqueConstraint(fields=('bom', 'code'), name='unique_template_per_bom'),
        ),
        migrations.AddConstraint(
            model_name='workorder',
            constraint=models.CheckConstraint(check=models.Q(('duration__gt', 0)), name='work_order_duration_positive'),
        ),
        migrations.AddConstraint(
            model_name='operation',
            constraint=models.UniqueConstraint(fields=('work_order_template', 'sequence'), name='unique_sequence_per_template'),
        ),
        migrations.AddConstraint(
            model_name='operation',
            constraint=models.CheckConstraint(check=models.Q(('duration__gt', 0)), name='duration_positive'),
        ),
        migrations.AddConstraint(
            model_name='manufacturingorder',
            constraint=models.CheckConstraint(check=models.Q(('quantity_to_produce__gt', 0)), name='quantity_to_produce_positive'),
        ),
        migrations.AlterUniqueTogether(
            name='dailyproduction',
            unique_together={('machine', 'shift', 'dayOfIssue')},
        ),
        migrations.AlterUniqueTogether(
            name='assetrandemanlist',
            unique_together={('mah', 'sal')},
        ),
        migrations.AlterUniqueTogether(
            name='assetfailure',
            unique_together={('asset_name', 'shift', 'failure_name', 'dayOfIssue')},
        ),
    ]
